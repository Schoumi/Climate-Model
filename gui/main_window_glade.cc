// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/camille/ubuntu/CIES/Atelier_projet/projet_climat_new/climat.glade
// for gtk 2.10.6 and gtkmm 2.10.2
//
// Please modify the corresponding derived classes in ./src/main_window.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/sigc++.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "main_window_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gtkmm/imagemenuitem.h>
#include <gtk/gtkimagemenuitem.h>
#include <gtkmm/image.h>
#include <gtkmm/menuitem.h>
#include <gtkmm/menu.h>
#include <gtkmm/checkmenuitem.h>
#include <gtkmm/menubar.h>
#include <gtkmm/label.h>
#include <gtkmm/box.h>
#include <gtkmm/alignment.h>
#include <gtkmm/button.h>
#include <gtkmm/viewport.h>
#include <gtkmm/adjustment.h>
#include <gtkmm/scrolledwindow.h>
#include <gtkmm/table.h>
#include "cairo_graphe.hh"
#include "glext_calottes.hh"
#include "glext_waterlevel.hh"
#include <gtkmm/tooltips.h>
#include "traduction.h"

main_window_glade::main_window_glade(
) : Gtk::Window(Gtk::WINDOW_TOPLEVEL)
{  
   
   Gtk::Window *main_window = this;
   gmm_data = new GlademmData(get_accel_group());
   
   Gtk::ImageMenuItem *nouveau_menuitem = NULL;
   Gtk::Image *image9 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-add"), Gtk::IconSize(1)));
   Gtk::ImageMenuItem *superposer_menuitem = NULL;
   Gtk::ImageMenuItem *save_menuitem = NULL;
   Gtk::MenuItem *separatormenuitem1 = NULL;
   Gtk::ImageMenuItem *quit_menuitem = NULL;
   Gtk::Menu *main_window_file_menuitem_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *main_window_file_menuitem = NULL;
   animations_menuitem = NULL;
   Gtk::Menu *main_window_view_menuitem_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *main_window_view_menuitem = NULL;
   Gtk::MenuItem *about1 = NULL;
   Gtk::Menu *main_window_help_menuitem_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *main_window_help_menuitem = NULL;
   Gtk::MenuBar *main_window_menubar = Gtk::manage(new class Gtk::MenuBar());
   Gtk::Label *main_window_boutons_titre_label = Gtk::manage(new class Gtk::Label(gettext("<b>Panneau de commandes</b>")));
   Gtk::Image *image3 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-new"), Gtk::IconSize(4)));
   Gtk::Label *label21 = Gtk::manage(new class Gtk::Label(gettext("Nouvelle simulation")));
   Gtk::HBox *hbox26 = Gtk::manage(new class Gtk::HBox(false, 2));
   Gtk::Alignment *alignment1 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 0, 0));
   Gtk::Button *nouvelle_simulation_button = Gtk::manage(new class Gtk::Button());
   Gtk::Image *image4 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-add"), Gtk::IconSize(4)));
   Gtk::Label *label22 = Gtk::manage(new class Gtk::Label(gettext("Superposer")));
   Gtk::HBox *hbox27 = Gtk::manage(new class Gtk::HBox(false, 2));
   Gtk::Alignment *alignment2 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 0, 0));
   Gtk::Button *superposer_button = Gtk::manage(new class Gtk::Button());
   Gtk::Image *image5 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-save"), Gtk::IconSize(4)));
   Gtk::Label *label23 = Gtk::manage(new class Gtk::Label(gettext("Enregistrer l'etat final")));
   Gtk::HBox *hbox28 = Gtk::manage(new class Gtk::HBox(false, 2));
   Gtk::Alignment *alignment3 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 0, 0));
   Gtk::Button *enregistrer_etat_final_button = Gtk::manage(new class Gtk::Button());
   Gtk::VBox *main_window_boutons_vbox = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Label *legende_titre_label = Gtk::manage(new class Gtk::Label(gettext("<b>LÃ©gende des graphes:</b>")));
   legende_texte_label = Gtk::manage(new class Gtk::Label(""));
   
   Gtk::Viewport *viewport1 = Gtk::manage(new class Gtk::Viewport(*manage(new Gtk::Adjustment(0,0,1)), *manage(new Gtk::Adjustment(0,0,1))));
   Gtk::ScrolledWindow *scrolledwindow1 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::VBox *main_window_legende_vbox = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Adjustment *time_slider_hscale_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 100, 1, 0, 0));
   time_slider_hscale = Gtk::manage(new class Gtk::HScale(*time_slider_hscale_adj));
   
   Gtk::VBox *main_window_legende_et_time_slider_vbox = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::HBox *main_window_partie_haute_hbox = Gtk::manage(new class Gtk::HBox(false, 15));
   Gtk::Label *calottes_label = Gtk::manage(new class Gtk::Label(gettext("<b>Calottes de glace</b>")));
   calotte_drawingarea = Gtk::manage(new class glext_calottes());
   
   Gtk::VBox *main_window_affichage_dessin_calottes_vbox = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Label *niveau_mer_label = Gtk::manage(new class Gtk::Label(gettext("<b>Niveau de la mer</b>")));
   niveau_mer_drawingarea = Gtk::manage(new class glext_waterlevel());
   
   Gtk::VBox *main_window_affichage_dessin_mer_vbox = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::VBox *main_window_dessins_vbox = Gtk::manage(new class Gtk::VBox(false, 0));
   graphe_two_combobox = Gtk::manage(new class Gtk::ComboBoxText());
   graphe_two_drawingarea = Gtk::manage(new class cairo_graphe(2));
   
   Gtk::Viewport *graphe_two_viewport = Gtk::manage(new class Gtk::Viewport(*manage(new Gtk::Adjustment(0,0,1)), *manage(new Gtk::Adjustment(0,0,1))));
   Gtk::VBox *graphe_two_vbox = Gtk::manage(new class Gtk::VBox(false, 0));
   graphe_three_combobox = Gtk::manage(new class Gtk::ComboBoxText());
   graphe_three_drawingarea = Gtk::manage(new class cairo_graphe(3));
   
   Gtk::Viewport *graphe_three_viewport = Gtk::manage(new class Gtk::Viewport(*manage(new Gtk::Adjustment(0,0,1)), *manage(new Gtk::Adjustment(0,0,1))));
   Gtk::VBox *graphe_three_vbox = Gtk::manage(new class Gtk::VBox(false, 0));
   graphe_four_combobox = Gtk::manage(new class Gtk::ComboBoxText());
   graphe_four_drawingarea = Gtk::manage(new class cairo_graphe(4));
   
   Gtk::Viewport *graphe_four_viewport = Gtk::manage(new class Gtk::Viewport(*manage(new Gtk::Adjustment(0,0,1)), *manage(new Gtk::Adjustment(0,0,1))));
   Gtk::VBox *graphe_four_vbox = Gtk::manage(new class Gtk::VBox(false, 0));
   graphe_one_combobox = Gtk::manage(new class Gtk::ComboBoxText());
   graphe_one_drawingarea = Gtk::manage(new class cairo_graphe(1));
   
   Gtk::Viewport *graphe_one_viewport = Gtk::manage(new class Gtk::Viewport(*manage(new Gtk::Adjustment(0,0,1)), *manage(new Gtk::Adjustment(0,0,1))));
   Gtk::VBox *graphe_one_vbox = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Table *main_window_affichage_graphes_table = Gtk::manage(new class Gtk::Table(2, 2, true));
   Gtk::HBox *main_window_affichage_hbox = Gtk::manage(new class Gtk::HBox(false, 4));
   main_window_statusbar = Gtk::manage(new class Gtk::Statusbar());
   
   Gtk::VBox *main_window_vbox = Gtk::manage(new class Gtk::VBox(false, 10));
   
   main_window_file_menuitem_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-new")));
   nouveau_menuitem = (Gtk::ImageMenuItem *)&main_window_file_menuitem_menu->items().back();
   
   main_window_file_menuitem_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(gettext("S_uperposer"), Gtk::GMM_GTKMM_22_24(Menu_Helpers::,)AccelKey(GDK_u, Gdk::CONTROL_MASK), *image9));
   superposer_menuitem = (Gtk::ImageMenuItem *)&main_window_file_menuitem_menu->items().back();
   
   main_window_file_menuitem_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-save")));
   save_menuitem = (Gtk::ImageMenuItem *)&main_window_file_menuitem_menu->items().back();
   
   main_window_file_menuitem_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   separatormenuitem1 = (Gtk::MenuItem *)&main_window_file_menuitem_menu->items().back();
   
   main_window_file_menuitem_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-quit")));
   quit_menuitem = (Gtk::ImageMenuItem *)&main_window_file_menuitem_menu->items().back();
   
   main_window_view_menuitem_menu->items().push_back(Gtk::Menu_Helpers::CheckMenuElem(gettext("Ani_mations")));
   animations_menuitem = (Gtk::CheckMenuItem *)&main_window_view_menuitem_menu->items().back();
   
   main_window_help_menuitem_menu->items().push_back(Gtk::Menu_Helpers::MenuElem("_About"));
   about1 = (Gtk::MenuItem *)&main_window_help_menuitem_menu->items().back();
   
   main_window_menubar->items().push_back(Gtk::Menu_Helpers::MenuElem("_File", *main_window_file_menuitem_menu));
   main_window_file_menuitem = (Gtk::MenuItem *)&main_window_menubar->items().back();
   
   main_window_menubar->items().push_back(Gtk::Menu_Helpers::MenuElem("_View", *main_window_view_menuitem_menu));
   main_window_view_menuitem = (Gtk::MenuItem *)&main_window_menubar->items().back();
   
   main_window_menubar->items().push_back(Gtk::Menu_Helpers::MenuElem("_Help", *main_window_help_menuitem_menu));
   main_window_help_menuitem = (Gtk::MenuItem *)&main_window_menubar->items().back();
   image9->set_alignment(0.5,0.5);
   image9->set_padding(0,0);
   animations_menuitem->set_active(false);
   main_window_boutons_titre_label->set_alignment(0.5,0.5);
   main_window_boutons_titre_label->set_padding(0,0);
   main_window_boutons_titre_label->set_justify(Gtk::JUSTIFY_LEFT);
   main_window_boutons_titre_label->set_line_wrap(false);
   main_window_boutons_titre_label->set_use_markup(true);
   main_window_boutons_titre_label->set_selectable(false);
   image3->set_alignment(0.5,0.5);
   image3->set_padding(0,0);
   label21->set_alignment(0.5,0.5);
   label21->set_padding(0,0);
   label21->set_justify(Gtk::JUSTIFY_LEFT);
   label21->set_line_wrap(false);
   label21->set_use_markup(false);
   label21->set_selectable(false);
   hbox26->pack_start(*image3, Gtk::PACK_SHRINK, 0);
   hbox26->pack_start(*label21, Gtk::PACK_SHRINK, 0);
   alignment1->add(*hbox26);
   nouvelle_simulation_button->set_flags(Gtk::CAN_FOCUS);
   nouvelle_simulation_button->set_relief(Gtk::RELIEF_NORMAL);
   nouvelle_simulation_button->add(*alignment1);
   m_tooltips.set_tip(*nouvelle_simulation_button,gettext("Pour lancer une nouvelle simulation, avec Ã©ventuellement une nouvelle durÃ©e de simulation et un nouvel Ã©tat initial.\n Attention, les courbes dÃ©jÃ  tracÃ©es seront effacÃ©es."),"");
   image4->set_alignment(0.5,0.5);
   image4->set_padding(0,0);
   label22->set_alignment(0.5,0.5);
   label22->set_padding(0,0);
   label22->set_justify(Gtk::JUSTIFY_LEFT);
   label22->set_line_wrap(false);
   label22->set_use_markup(false);
   label22->set_selectable(false);
   hbox27->pack_start(*image4, Gtk::PACK_SHRINK, 0);
   hbox27->pack_start(*label22, Gtk::PACK_SHRINK, 0);
   alignment2->add(*hbox27);
   superposer_button->set_flags(Gtk::CAN_FOCUS);
   superposer_button->set_relief(Gtk::RELIEF_NORMAL);
   superposer_button->add(*alignment2);
   m_tooltips.set_tip(*superposer_button,gettext("Pour superposer une simulation Ã  une simulation dÃ©jÃ  rÃ©alisÃ©e.\n La durÃ©e de simulation et l'Ã©tat initial seront alors les mÃªmes que pour la prÃ©cÃ©dente simulation."),"");
   image5->set_alignment(0.5,0.5);
   image5->set_padding(0,0);
   label23->set_alignment(0.5,0.5);
   label23->set_padding(0,0);
   label23->set_justify(Gtk::JUSTIFY_LEFT);
   label23->set_line_wrap(false);
   label23->set_use_markup(false);
   label23->set_selectable(false);
   hbox28->pack_start(*image5, Gtk::PACK_SHRINK, 0);
   hbox28->pack_start(*label23, Gtk::PACK_SHRINK, 0);
   alignment3->add(*hbox28);
   enregistrer_etat_final_button->set_flags(Gtk::CAN_FOCUS);
   enregistrer_etat_final_button->set_relief(Gtk::RELIEF_NORMAL);
   enregistrer_etat_final_button->add(*alignment3);
   m_tooltips.set_tip(*enregistrer_etat_final_button,gettext("Pour enregister l'Ã©tat final d'une des simulations dÃ©jÃ  rÃ©alisÃ©es.\n La simulation enregistrÃ©e pourra alors Ãªtre continuÃ©e au cours d'une simulation ultÃ©rieure."),"");
   main_window_boutons_vbox->pack_start(*main_window_boutons_titre_label, Gtk::PACK_SHRINK, 0);
   main_window_boutons_vbox->pack_start(*nouvelle_simulation_button, Gtk::PACK_SHRINK, 0);
   main_window_boutons_vbox->pack_start(*superposer_button, Gtk::PACK_SHRINK, 0);
   main_window_boutons_vbox->pack_start(*enregistrer_etat_final_button, Gtk::PACK_SHRINK, 0);
   legende_titre_label->set_alignment(0.5,0.5);
   legende_titre_label->set_padding(0,0);
   legende_titre_label->set_justify(Gtk::JUSTIFY_LEFT);
   legende_titre_label->set_line_wrap(false);
   legende_titre_label->set_use_markup(true);
   legende_titre_label->set_selectable(false);
   legende_texte_label->set_alignment(0.01,0.01);
   legende_texte_label->set_padding(0,0);
   legende_texte_label->set_justify(Gtk::JUSTIFY_LEFT);
   legende_texte_label->set_line_wrap(false);
   legende_texte_label->set_use_markup(true);
   legende_texte_label->set_selectable(false);
   viewport1->set_shadow_type(Gtk::SHADOW_IN);
   viewport1->add(*legende_texte_label);
   scrolledwindow1->set_size_request(-1,100);
   scrolledwindow1->set_flags(Gtk::CAN_FOCUS);
   scrolledwindow1->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   scrolledwindow1->set_policy(Gtk::POLICY_NEVER, Gtk::POLICY_AUTOMATIC);
   scrolledwindow1->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow1->add(*viewport1);
   main_window_legende_vbox->pack_start(*legende_titre_label, Gtk::PACK_SHRINK, 0);
   main_window_legende_vbox->pack_start(*scrolledwindow1, Gtk::PACK_SHRINK, 0);
   time_slider_hscale->set_flags(Gtk::CAN_FOCUS);
   time_slider_hscale->set_update_policy(Gtk::UPDATE_CONTINUOUS);
   time_slider_hscale->set_inverted(false);
   //time_slider_hscale->set_digits(1);
   time_slider_hscale->set_draw_value(false);
   //time_slider_hscale->set_value_pos(Gtk::POS_LEFT);
   main_window_legende_et_time_slider_vbox->pack_start(*main_window_legende_vbox, Gtk::PACK_SHRINK, 0);
   main_window_legende_et_time_slider_vbox->pack_start(*time_slider_hscale, Gtk::PACK_SHRINK, 0);
   main_window_partie_haute_hbox->pack_start(*main_window_boutons_vbox);
   main_window_partie_haute_hbox->pack_start(*main_window_legende_et_time_slider_vbox);
   calottes_label->set_alignment(0,0.5);
   calottes_label->set_padding(0,0);
   calottes_label->set_justify(Gtk::JUSTIFY_LEFT);
   calottes_label->set_line_wrap(false);
   calottes_label->set_use_markup(true);
   calottes_label->set_selectable(false);
   calotte_drawingarea->set_size_request(200,200);
   main_window_affichage_dessin_calottes_vbox->pack_start(*calottes_label, Gtk::PACK_SHRINK, 0);
   main_window_affichage_dessin_calottes_vbox->pack_start(*calotte_drawingarea);
   niveau_mer_label->set_alignment(0,0.5);
   niveau_mer_label->set_padding(0,0);
   niveau_mer_label->set_justify(Gtk::JUSTIFY_LEFT);
   niveau_mer_label->set_line_wrap(false);
   niveau_mer_label->set_use_markup(true);
   niveau_mer_label->set_selectable(false);
   niveau_mer_drawingarea->set_size_request(200,200);
   main_window_affichage_dessin_mer_vbox->pack_start(*niveau_mer_label, Gtk::PACK_SHRINK, 0);
   main_window_affichage_dessin_mer_vbox->pack_start(*niveau_mer_drawingarea);
   main_window_dessins_vbox->pack_start(*main_window_affichage_dessin_calottes_vbox);
   main_window_dessins_vbox->pack_start(*main_window_affichage_dessin_mer_vbox);
   graphe_two_drawingarea->set_size_request(400,200);
   graphe_two_viewport->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   graphe_two_viewport->add(*graphe_two_drawingarea);
   graphe_two_vbox->pack_start(*graphe_two_combobox, Gtk::PACK_SHRINK, 0);
   graphe_two_vbox->pack_start(*graphe_two_viewport);
   graphe_three_drawingarea->set_size_request(400,200);
   graphe_three_viewport->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   graphe_three_viewport->add(*graphe_three_drawingarea);
   graphe_three_vbox->pack_start(*graphe_three_combobox, Gtk::PACK_SHRINK, 0);
   graphe_three_vbox->pack_start(*graphe_three_viewport);
   graphe_four_drawingarea->set_size_request(400,200);
   graphe_four_viewport->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   graphe_four_viewport->add(*graphe_four_drawingarea);
   graphe_four_vbox->pack_start(*graphe_four_combobox, Gtk::PACK_SHRINK, 0);
   graphe_four_vbox->pack_start(*graphe_four_viewport);
   graphe_one_drawingarea->set_size_request(400,200);
   graphe_one_viewport->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   graphe_one_viewport->add(*graphe_one_drawingarea);
   graphe_one_vbox->pack_start(*graphe_one_combobox, Gtk::PACK_SHRINK, 0);
   graphe_one_vbox->pack_start(*graphe_one_viewport);
   main_window_affichage_graphes_table->set_row_spacings(2);
   main_window_affichage_graphes_table->set_col_spacings(2);
   main_window_affichage_graphes_table->attach(*graphe_two_vbox, 0, 1, 1, 2, Gtk::FILL, Gtk::EXPAND|Gtk::FILL, 0, 0);
   main_window_affichage_graphes_table->attach(*graphe_three_vbox, 1, 2, 0, 1, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 0, 0);
   main_window_affichage_graphes_table->attach(*graphe_four_vbox, 1, 2, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   main_window_affichage_graphes_table->attach(*graphe_one_vbox, 0, 1, 0, 1, Gtk::EXPAND|Gtk::FILL, Gtk::EXPAND|Gtk::FILL, 0, 0);
   main_window_affichage_hbox->pack_start(*main_window_dessins_vbox);
   main_window_affichage_hbox->pack_start(*main_window_affichage_graphes_table);
   main_window_vbox->pack_start(*main_window_menubar, Gtk::PACK_SHRINK, 0);
   main_window_vbox->pack_start(*main_window_partie_haute_hbox, Gtk::PACK_SHRINK, 0);
   main_window_vbox->pack_start(*main_window_affichage_hbox);
   main_window_vbox->pack_start(*main_window_statusbar, Gtk::PACK_SHRINK, 0);
   main_window->set_title(gettext("modÃ¨le de climat"));
   main_window->set_modal(false);
   main_window->property_window_position().set_value(Gtk::WIN_POS_NONE);
   main_window->set_resizable(true);
   main_window->property_destroy_with_parent().set_value(false);
   main_window->add(*main_window_vbox);
   nouveau_menuitem->show();
   image9->show();
   superposer_menuitem->show();
   save_menuitem->show();
   separatormenuitem1->show();
   quit_menuitem->show();
   main_window_file_menuitem->show();
   animations_menuitem->show();
   main_window_view_menuitem->show();
   about1->show();
   main_window_help_menuitem->show();
   main_window_menubar->show();
   main_window_boutons_titre_label->show();
   image3->show();
   label21->show();
   hbox26->show();
   alignment1->show();
   nouvelle_simulation_button->show();
   image4->show();
   label22->show();
   hbox27->show();
   alignment2->show();
   superposer_button->show();
   image5->show();
   label23->show();
   hbox28->show();
   alignment3->show();
   enregistrer_etat_final_button->show();
   main_window_boutons_vbox->show();
   legende_titre_label->show();
   legende_texte_label->show();
   viewport1->show();
   scrolledwindow1->show();
   main_window_legende_vbox->show();
   time_slider_hscale->show();
   main_window_legende_et_time_slider_vbox->show();
   main_window_partie_haute_hbox->show();
   calottes_label->show();
   calotte_drawingarea->show();
   main_window_affichage_dessin_calottes_vbox->show();
   niveau_mer_label->show();
   niveau_mer_drawingarea->show();
   main_window_affichage_dessin_mer_vbox->show();
   main_window_dessins_vbox->show();
   graphe_two_combobox->show();
   graphe_two_drawingarea->show();
   graphe_two_viewport->show();
   graphe_two_vbox->show();
   graphe_three_combobox->show();
   graphe_three_drawingarea->show();
   graphe_three_viewport->show();
   graphe_three_vbox->show();
   graphe_four_combobox->show();
   graphe_four_drawingarea->show();
   graphe_four_viewport->show();
   graphe_four_vbox->show();
   graphe_one_combobox->show();
   graphe_one_drawingarea->show();
   graphe_one_viewport->show();
   graphe_one_vbox->show();
   main_window_affichage_graphes_table->show();
   main_window_affichage_hbox->show();
   main_window_statusbar->show();
   main_window_vbox->show();
   main_window->show();
   nouveau_menuitem->signal_activate().connect(sigc::mem_fun(*this, &main_window_glade::on_new1_activate), false);
   superposer_menuitem->signal_activate().connect(sigc::mem_fun(*this, &main_window_glade::on_superposer_menuitem_activate), false);
   save_menuitem->signal_activate().connect(sigc::mem_fun(*this, &main_window_glade::on_save1_activate), false);
   quit_menuitem->signal_activate().connect(sigc::mem_fun(*this, &main_window_glade::on_quit1_activate), false);
   animations_menuitem->signal_activate().connect(sigc::mem_fun(*this, &main_window_glade::on_animations_menuitem_activate), false);
   about1->signal_activate().connect(sigc::mem_fun(*this, &main_window_glade::on_about1_activate), false);
   nouvelle_simulation_button->signal_clicked().connect(sigc::mem_fun(*this, &main_window_glade::on_nouvelle_simulation_button_clicked), true);
   superposer_button->signal_clicked().connect(sigc::mem_fun(*this, &main_window_glade::on_superposer_button_clicked), true);
   enregistrer_etat_final_button->signal_clicked().connect(sigc::mem_fun(*this, &main_window_glade::on_enregistrer_etat_final_button_clicked), true);
   time_slider_hscale->signal_value_changed().connect(sigc::mem_fun(*this, &main_window_glade::on_time_slider_hscale_value_changed), false);
   graphe_two_combobox->signal_changed().connect(sigc::mem_fun(*this, &main_window_glade::on_graphe_two_combobox_changed), true);
   graphe_three_combobox->signal_changed().connect(sigc::mem_fun(*this, &main_window_glade::on_graphe_three_combobox_changed), true);
   graphe_four_combobox->signal_changed().connect(sigc::mem_fun(*this, &main_window_glade::on_graphe_four_combobox_changed), true);
   graphe_one_combobox->signal_changed().connect(sigc::mem_fun(*this, &main_window_glade::on_graphe_one_combobox_changed), true);
}

main_window_glade::~main_window_glade()
{  delete gmm_data;
}
